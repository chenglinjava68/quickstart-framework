
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

worker_rlimit_nofile 65535;
events {
    worker_connections  10240;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    upstream gateway_cluster {
        server 20.26.85.228:21100;
        server 20.26.85.229:21100;
        server 20.26.85.230:21100;
        #http健康检查相关配置
        check interval=3000 rise=2 fall=3 timeout=3000 type=http;
        #/health/status为后端健康检查接口
        check_http_send "HEAD /gateway/beartbeat HTTP/1.1\r\n\r\n";
        check_http_expect_alive http_2xx http_3xx;
    }

    upstream gateway_config_cluster {
            server 20.26.85.228:31100;
            server 20.26.85.229:31100;
            server 20.26.85.230:31100;
            #http健康检查相关配置
            check interval=3000 rise=2 fall=3 timeout=3000 type=http;
            #/health/status为后端健康检查接口
            check_http_send "GET /heartbeat HTTP/1.1\r\n\r\n";
            check_http_expect_alive http_2xx http_3xx;
        }

    upstream oauth2_cluster {
        server 20.26.85.231:9001;
        server 20.26.85.232:9001;
        server 20.26.85.233:9001;
        #http健康检查相关配置
        check interval=3000 rise=2 fall=3 timeout=3000 type=http;
        #/health/status为后端健康检查接口
        check_http_send "HEAD /oauth2/heartbeat HTTP/1.0\r\n\r\n";
        check_http_expect_alive http_2xx http_3xx;
    }

    server {
        listen       28080;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        location /gateway {
                proxy_pass http://gateway_cluster;
                proxy_redirect off;
                proxy_cookie_path /gateway /oauth2;
                proxy_http_version 1.1;
                proxy_set_header Connection "";
                proxy_set_header  Cookie  $http_cookie;
                proxy_set_header  Host  $host;
                proxy_set_header  X-Real-IP  $remote_addr;
                proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
                proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }
        location /rest {
                proxy_pass http://gateway_cluster;
                proxy_redirect off;
                proxy_cookie_path /gateway /oauth2;
                proxy_http_version 1.1;
                proxy_set_header Connection "";
                proxy_set_header  Cookie  $http_cookie;
                proxy_set_header  Host  $host;
                proxy_set_header  X-Real-IP  $remote_addr;
                proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
                proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        location /http {
                proxy_pass http://gateway_cluster;
                proxy_redirect off;
                proxy_cookie_path /gateway /oauth2;
                proxy_http_version 1.1;
                proxy_set_header Connection "";
                proxy_set_header  Cookie  $http_cookie;
                proxy_set_header  Host  $host;
                proxy_set_header  X-Real-IP  $remote_addr;
                proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
                proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        location /api {
                proxy_pass http://gateway_config_cluster;
                proxy_redirect off;
                proxy_cookie_path /gateway /oauth2;
                proxy_http_version 1.1;
                proxy_set_header Connection "";
                proxy_set_header  Cookie  $http_cookie;
                proxy_set_header  Host  $host;
                proxy_set_header  X-Real-IP  $remote_addr;
                proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
                proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        location /oauth2 {
                proxy_pass http://oauth2_cluster;
                proxy_redirect off;
                proxy_cookie_path /gateway /oauth2;
                proxy_http_version 1.1;
                proxy_set_header Connection "";
                proxy_set_header  Cookie  $http_cookie;
                proxy_set_header  Host  $host;
                proxy_set_header  X-Real-IP  $remote_addr;
                proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
                proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        location /rest/authorization {
                proxy_pass http://oauth2_cluster/oauth2/authorization;
                proxy_redirect off;
                proxy_cookie_path /gateway /oauth2;
                proxy_http_version 1.1;
                proxy_set_header Connection "";
                proxy_set_header  Cookie  $http_cookie;
                proxy_set_header  Host  $host;
                proxy_set_header  X-Real-IP  $remote_addr;
                proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
                proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        location /status {
                check_status;    #可以监控RS状态
                access_log off;
                allow all;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
